{
  "auth": {
    "login": "Login",
    "register": "Register",
    "codeLogin": "Code Login",
    "qrcodeLogin": "Qr Code Login",
    "forgetPassword": "Forget Password"
  },
  "dashboard": {
    "title": "Dashboard",
    "analytics": "Analytics",
    "workspace": "Workspace"
  },
  "system": {
    "title": "System Management",
    "user": {
      "module": "User",
      "title": "User Management",
      "username": "User Name",
      "nickName": "Nick Name",
      "realName": "Real Name",
      "email": "Email",
      "phone": "Phone",
      "authority": "Authority",
      "orgId": "Subordinate Organization",
      "deptId": "Subordinate Department",
      "lastLoginIp": "Last Login IP",
      "lastLoginTime": "Last Login Time",
      "role": "Role",
      "resetPassword": "Reset Password",
      "newPassword": "New Password",
      "confirmPassword": "Confirm Password",
      "passwordMinLength": "Password length must be greater than 6 characters",
      "passwordNotMatch": "Two passwords do not match",
      "resetPasswordSuccess": "Reset password successfully",
      "resetPasswordFailed": "Reset password failed",
      "button": {
        "create": "Create",
        "delete": "Delete",
        "update": "Update"
      }
    },
    "menu": {
      "module": "Menu",
      "title": "Menu Management",
      "name": "Menu Name",
      "routeName": "Route Name",
      "type": "Type",
      "icon": "Icon",
      "path": "Path",
      "component": "Component",
      "show": "Show",
      "isExt": "Is Ext",
      "keepAlive": "Keep Alive",
      "parentId": "Parent Menu",
      "perm": "Authority",
      "affixTab": "Affix Tab",
      "hideChildrenInMenu": "Hide Children In Menu",
      "hideInBreadcrumb": "Hide In Breadcrumb",
      "hideInMenu": "Hide In Menu",
      "hideInTab": "Hide InT ab",
      "button": {
        "create": "Create",
        "delete": "Delete",
        "update": "Update"
      }
    },
    "role": {
      "module": "Role",
      "title": "Role Management",
      "name": "Role Name",
      "code": "Role Code",
      "show": "Show",
      "apiAuth": "Api Auth",
      "menuAuth": "Menu Auth",
      "button": {
        "create": "Create",
        "auth": "Assign Permissions",
        "delete": "Delete",
        "update": "Update"
      }
    },
    "api": {
      "module": "API",
      "title": "API Management",
      "description": "API Description",
      "parentId": "Parent API",
      "method": "Method",
      "Path": "Path",
      "button": {
        "create": "Create",
        "delete": "Delete",
        "update": "Update"
      }
    },
    "dict": {
      "module": "Dict",
      "title": "Dict Management",
      "dictName": "Dict Name",
      "dictType": "Dict Type",
      "itemKey": "Item Key",
      "itemValue": "Item Value",
      "button": {
        "create": "Create",
        "delete": "Delete",
        "update": "Update"
      }
    },
    "record": {
      "module": "Operating Record",
      "title": "Operating Record",
      "username": "Operating User",
      "description": "Description",
      "method": "method",
      "path": "Path",
      "statusCode": "StatusCode",
      "msg": "Msg",
      "elapsed": "Elapsed(ms)",
      "platform": "Platform",
      "ip": "IP",
      "createTime": "Operating Time",
      "button": {
        "delete": "Delete"
      }
    }
  },
  "stree": {
    "title": "Service Tree",
    "pageTitle": "Service Tree Node Information",
    "prompt": {
      "noNode": "Please select a node from the left to view the details"
    },
    "host": {
      "module": "Host",
      "menu": "Host Management",
      "gridTitle": "Host Management",
      "hostName": "Host Name",
      "hostIp": "Host IP",
      "streeNodePath": "Node Path",
      "assignNodeStatus": "Assign Node Status",
      "availableHosts": "Available Hosts",
      "boundHosts": "Bound Hosts",
      "columns": {
        "hostName": "Host Name",
        "hostIp": "Host IP",
        "cpu": "CPU",
        "memory": "Memory",
        "nodeExporterPort": "Metrics Port",
        "osType": "OS Type",
        "osInfo": "OS Info",
        "vmType": "VM Type",
        "description": "Description",
        "vendor": "Vendor",
        "zone": "Zone",
        "status": "Status",
        "env": "Env",
        "streeNodePath": "Node Path",
        "assignNodeStatus": "Assign Node Status"
      },
      "osType": {
        "linux": "Linux",
        "windows": "Windows"
      },
      "vmType": {
        "cloud": "Cloud Host",
        "virtual": "Virtual Machine",
        "physical": "Physical Machine"
      },
      "vendor": {
        "aliyun": "Aliyun",
        "tencent": "Tencent",
        "huawei": "Huawei",
        "aws": "AWS",
        "VMware": "VMware",
        "other": "Other"
      },
      "nodeStatus": {
        "1": "Unassigned",
        "2": "Assigned"
      },
      "button": {
        "create": "Create Host",
        "edit": "Edit Host",
        "delete": "Delete Host",
        "bind": "Bind Host",
        "unbind": "Unbind Host"
      },
      "status": {
        "title": "Host Status",
        "1": "Normal",
        "2": "Abnormal",
        "3": "Insufficient Resource",
        "4": "Resource Idle"
      },
      "env": {
        "title": "Host Environment",
        "1": "Development Environment",
        "2": "Testing Environment",
        "3": "Pre-release Environment",
        "4": "Production Environment"
      }
    },
    "node": {
      "module": "Node",
      "bindHost": "Bind Host",
      "info": "Node Information",
      "title": "Node Name",
      "desc": "Node Description",
      "isLeaf": "Is Leaf Node",
      "pId": "Parent Node ID",
      "editTitle": "Edit Node Information",
      "prompt": {
        "title": "Please enter the node name",
        "desc": "Please enter the node description",
        "treeLevel": "Please enter the node tree level",
        "opsAdmin": "Please assign the ops admin",
        "developers": "Please assign the developers",
        "testers": "Please assign the testers",
        "devManager": "Please assign the dev manager",
        "pId": "Please select the parent node"
      },
      "tabs": {
        "nodeDetail": "Node Detail",
        "hostList": "Host List",
        "nodePath": "Node Path",
        "nodeDesc": "Node Description",
        "treeLevel": "Tree Level",
        "opsAdmin": "Ops Admin",
        "developers": "Developers",
        "testers": "Testers",
        "devManager": "Dev Manager"
      },
      "button": {
        "create": "Create Node",
        "createTop": "Create Top Node",
        "edit": "Edit Info"
      },
      "notification": {
        "load_failed": "Load node failed",
        "load_success": "Load node success",
        "createSuccess": "Create node success",
        "createFailed": "Create node failed"
      }
    }
  },
  "monitor": {
    "title": "Monitor Center",
    "scrapePool": {
      "module": "Scrape Pool",
      "menu": "Scrape Pool Management",
      "columns": {
        "name": "Scrape Pool Name",
        "remoteWriteUrl": "Remote Write URL",
        "remoteReadUrl": "Remote Read URL",
        "scrapeInterval": "Scrape Interval",
        "scrapeTimeout": "Scrape Timeout",
        "prometheusInstances": "Prometheus Instances",
        "externalLabels": "External Labels",
        "createdAt": "Created At",
        "updatedAt": "Updated At",
        "remoteTimeoutSeconds": "Remote Write Timeout",
        "supportAlert": "Support Alert",
        "alertManagerUrl": "Alert Manager URL",
        "RuleFilePath": "Rule File Path",
        "supportRecord": "Support Record",
        "RecordFilePath": "Record File Path"
      },
      "prompt": {
        "prometheusInstances": "Please select the prometheus instance",
        "externalLabels": "Please enter the label, each line is an example: \napp=gateway\nenv=pord",
        "externalLabelsFormat": "The label format must be key=value",
        "externalLabelsHelp": "Each line is a label, the format is key=value"
      },
      "config": {
        "tabs": {
          "mainConfig": "Main Config",
          "ruleConfig": "Rule Config"
        }
      },
      "button": {
        "create": "Create Scrape Pool",
        "edit": "Edit Scrape Pool",
        "delete": "Delete Scrape Pool"
      }
    },
    "scrapeJob": {
      "module": "Scrape Job",
      "title": "{name} Scrape Job",
      "columns": {
        "name": "Scrape Job Name",
        "enable": "Enable",
        "serviceDiscoveryType": "Service Discovery Type",
        "metricsPath": "Metrics Path",
        "scheme": "Scheme",
        "scrapeInterval": "Scrape Interval",
        "scrapeTimeout": "Scrape Timeout",
        "port": "Port",
        "createdAt": "Created At",
        "updatedAt": "Updated At",
        "pool": "Scrape Pool",
        "relabelConfigsYamlString": "Custom Relabel Configs",
        "relabelConfigsYamlStringHelp": "Please enter the relabel configs, each line is an example: \n- source_labels: [__meta_kubernetes_pod_label_app]\n  target_label: app\n  action: replace\n  regex: (.*)\n  replacement: $1",
        "refreshInterval": "http sd refresh interval",
        "treeNodeIds": "Service Tree Node"
      },
      "button": {
        "create": "Create Scrape Job"
      }
    }
  }
}
